---
- name: Verify that SSH key for {{ ansible_user }} exists
  stat:
    path: "{{ ansible_user_dir }}/.ssh/id_rsa.pub"
  register: sshkeypath
  tags: installconfig

- name: Get the contents of the ssh key for {{ ansible_user }}
  slurp:
    src: "{{ ansible_user_dir }}/.ssh/id_rsa.pub"
  register: sshkey
  when: sshkeypath.stat.exists == true
  tags: installconfig

- name: Set Fact for the ssh key of {{ ansible_user }}
  set_fact:
    key: "{{ sshkey['content'] | b64decode }}"
  tags: installconfig

- name: Generate install-config.yaml
  template:
    src: install-config.j2
    dest: "{{ dir }}/install-config.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  when:
  - pullsecret is defined
  - pullsecret != ""
  - not enable_virtualmedia|bool
  tags: installconfig

- name: Generate virtualmedia install-config.yaml
  template:
    src: install-config-virtualmedia.j2
    dest: "{{ dir }}/install-config.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  when:
  - pullsecret is defined
  - pullsecret != ""
  - enable_virtualmedia|bool
  tags: installconfig

- name: Make a backup of the install-config.yaml file
  copy:
    src: "{{ dir }}/install-config.yaml"
    dest: "{{ dir }}/install-config.yaml.bkup"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
    remote_src: yes
  tags: installconfig
