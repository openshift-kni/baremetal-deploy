kind: ConfigMap
apiVersion: v1
metadata:
  name: sriov-unsupported-nics-entrypoint
data:
  entrypoint.sh: |
    #!/bin/sh
    set -euo pipefail
    echo "########################################"
    echo "# Apply udev rules in unsupported NICs #"
    echo "########################################"
    OPERATORUDEVRULES="/etc/udev/rules.d/10-nm-unmanaged.rules"
    CUSTOMUDEVRULES="/etc/udev/rules.d/11-custom-nm-unmanaged.rules"

    if [ -f ${CUSTOMUDEVRULES} ] || [ -f ${OPERATORUDEVRULES} ]; then
      while true ; do
        echo "udev rules already applied, sleep loop"
        sleep 3600
      done
    else
      UDEVDEVICE=$(cat /sys/class/net/${nic}/device/sriov_vf_device)
      echo "ACTION==\"add|change\", ATTRS{device}==\"0x${UDEVDEVICE}\", ENV{NM_UNMANAGED}=\"1\"" > ${CUSTOMUDEVRULES}
      udevadm control --reload-rules
      udevadm trigger
    fi
---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: sriov-unsupported-nics-ds
  labels:
    app: sriov-unsupported-nics-ds
spec:
  selector:
    matchLabels:
      app: sriov-unsupported-nics-ds
  template:
    metadata:
      labels:
        app: sriov-unsupported-nics-ds
    spec:
      serviceAccount: sriov-network-config-daemon
      nodeSelector:
        ${NODESELECTOR}
      containers:
      - name: sriov-unsupported-nics
        image: ubi8/ubi-minimal
        command: ['sh', '-c', 'cp /script/entrypoint.sh /host/tmp && chmod +x /host/tmp/entrypoint.sh && echo "Creating udev rules" && chroot /host /tmp/entrypoint.sh && sleep infinity']
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /script
          name: sriov-unsupported-nics-script
        - mountPath: /host
          name: host
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          name: sriov-unsupported-nics-entrypoint
        name: sriov-unsupported-nics-script
      - hostPath:
          path: /
          type: Directory
        name: host
